{"ast":null,"code":"var _jsxFileName = \"/home/hamdi/Desktop/e-commerce/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverviewComponent from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport Collection from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCollectionFetching } from \"../../redux/shop/shop.selectos\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverviewComponent);\nconst CollectionPageWithSpinner = WithSpinner(Collection);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoding: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoding: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/hamdi/Desktop/e-commerce/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverviewComponent","Route","Collection","connect","fetchCollectionsStartAsync","createStructuredSelector","selectCollectionFetching","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,wBAAT,QAAyC,gCAAzC;AAEA,OAAQC,WAAR,MAA0B,sDAA1B;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACP,4BAAD,CAAlD;AACA,MAAMS,yBAAyB,GAAGF,WAAW,CAAEL,UAAF,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAGrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAER,MAAAA;AAAF,QAAiC,KAAKS,KAA5C;AAEAT,IAAAA,0BAA0B;AAE3B;;AAEDU,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKH,KAA7C;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACA,MAAA,KAAK,MADL;AAEA,MAAA,IAAI,EAAK,GAAEE,KAAK,CAACE,IAAK,EAFtB;AAGA,MAAA,MAAM,EAAGJ,KAAD,iBAAW,oBAAC,8BAAD;AACnB,QAAA,QAAQ,EAAEG;AADS,SACiBH,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI,oBAAC,KAAD;AACA,MAAA,KAAK,MADL;AAEA,MAAA,IAAI,EAAI,GAAEE,KAAK,CAACE,IAAK,gBAFrB;AAGA,MAAA,MAAM,EAAGJ,KAAD,iBAAW,oBAAC,yBAAD;AACnB,QAAA,QAAQ,EAAEG;AADS,SACiBH,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADF;AAcD;;AA3BoC;;AA8BvC,MAAMK,eAAe,GAAGb,wBAAwB,CAAC;AAC/CW,EAAAA,oBAAoB,EAAEV;AADyB,CAAD,CAAhD;;AAIA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAM;AACvChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADH,CAAN,CAAnC;;AAIA,eAAeD,OAAO,CAAEe,eAAF,EAAmBC,kBAAnB,CAAP,CAA8CT,QAA9C,CAAf","sourcesContent":["import React from 'react';\nimport CollectionsOverviewComponent from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport Collection from '../collection/collection.component';\nimport { connect } from 'react-redux';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCollectionFetching } from \"../../redux/shop/shop.selectos\";\n\nimport  WithSpinner  from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverviewComponent)\nconst CollectionPageWithSpinner = WithSpinner (Collection);\n\nclass ShopPage extends React.Component {\n\n\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n\n    fetchCollectionsStartAsync()\n\n  }\n\n  render () {\n    const { match, isCollectionFetching } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n          <Route \n          exact  \n          path = {`${match.path}`} \n          render={(props) => <CollectionsOverviewWithSpinner \n          isLoding={isCollectionFetching} {...props} />} />\n          <Route \n          exact \n          path= {`${match.path}/:collectionId`} \n          render={(props) => <CollectionPageWithSpinner \n          isLoding={isCollectionFetching} {...props} />}/>\n      </div> \n    );\n  }\n}  \n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectCollectionFetching\n})\n\nconst mapDispatchToProps = dispatch =>  ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\nexport default connect (mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}