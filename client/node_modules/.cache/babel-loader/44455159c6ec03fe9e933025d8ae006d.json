{"ast":null,"code":"var _jsxFileName = \"/home/hamdi/Desktop/e-commerce/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverviewComponent from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport Collection from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { WithSpinner } from \"../../components/with-spinner/with-spinner.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    const {\n      updateCollections\n    } = this.props;\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      component: Collection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/hamdi/Desktop/e-commerce/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverviewComponent","Route","Collection","connect","updateCollections","WithSpinner","firestore","convertCollectionsSnapshotToMap","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","props","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,SAASC,WAAT,QAA4B,sDAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,uBADqC,GACX,IADW;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACAF,IAAAA,aAAa,CAACG,UAAd,CAA0B,MAAMC,QAAN,IAAkB;AAC1C,YAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AACAZ,MAAAA,iBAAiB,CAACa,cAAD,CAAjB;AACD,KAHD;AAKD;;AAEDC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKL,KAAvB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAc,MAAA,IAAI,EAAK,GAAEK,KAAK,CAACC,IAAK,EAApC;AAAuC,MAAA,SAAS,EAAEpB,4BAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAI,GAAEmB,KAAK,CAACC,IAAK,gBAAlC;AAAmD,MAAA,SAAS,EAAElB,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF;AAMD;;AAtBoC;;AAyBvC,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAM;AACvClB,EAAAA,iBAAiB,EAAEa,cAAc,IAAIK,QAAQ,CAAClB,iBAAiB,CAACa,cAAD,CAAlB;AADN,CAAN,CAAnC;;AAIA,eAAed,OAAO,CAAE,IAAF,EAAQkB,kBAAR,CAAP,CAAmCb,QAAnC,CAAf","sourcesContent":["import React from 'react';\nimport CollectionsOverviewComponent from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport Collection from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport { WithSpinner } from \"../../components/with-spinner/with-spinner.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component {\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    const { updateCollections } = this.props;\n    collectionRef.onSnapshot( async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    })\n\n  }\n\n  render () {\n    const { match } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n          <Route exact  path = {`${match.path}`} component={CollectionsOverviewComponent} />\n          <Route exact path= {`${match.path}/:collectionId`} component={Collection}/>\n      </div> \n    );\n  }\n}  \n\nconst mapDispatchToProps = dispatch =>  ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect (null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}