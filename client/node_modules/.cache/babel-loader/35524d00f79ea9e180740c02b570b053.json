{"ast":null,"code":"import { createSelector } from \"reselect\"; //input selector\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectCollectionLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/home/hamdi/Desktop/e-commerce/client/src/redux/shop/shop.selectos.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectCollectionFetching","isFetching","selectCollectionLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CAIA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE1CE,IAAD,IAAUA,IAAI,CAACE,WAF4B,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACrD,CAACI,iBAAD,CADqD,EAEpDC,WAAD,IAAiBA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAFlC,CAAlD;AAKP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IACjDZ,cAAc,CACX,CAACI,iBAAD,CADW,EAEVC,WAAD,IAAkBA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFvD,CADR;AAMP,OAAO,MAAMC,wBAAwB,GAAGb,cAAc,CAClD,CAACC,UAAD,CADkD,EAEjDE,IAAD,IAAUA,IAAI,CAACW,UAFmC,CAA/C;AAKP,OAAO,MAAMC,sBAAsB,GAAGf,cAAc,CAChD,CAACC,UAAD,CADgD,EAE/CE,IAAD,IAAU,CAAC,CAACA,IAAI,CAACE,WAF+B,CAA7C","sourcesContent":["import { createSelector } from \"reselect\";\n\n\n\n//input selector\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    (shop) => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    (collections) => collections ? Object.keys(collections).map(key => collections[key]) : [] \n);\n\nexport const selectCollection = collectionUrlParam => \n createSelector(\n    [selectCollections],\n    (collections) => (collections ? collections[collectionUrlParam] : null)\n);\n\nexport const selectCollectionFetching = createSelector(\n    [selectShop],\n    (shop) => shop.isFetching\n);\n\nexport const selectCollectionLoaded = createSelector(\n    [selectShop],\n    (shop) => !!shop.collections\n);"]},"metadata":{},"sourceType":"module"}