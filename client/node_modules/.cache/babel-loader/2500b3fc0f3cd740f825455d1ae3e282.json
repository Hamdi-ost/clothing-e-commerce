{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './root-reducer'; //import thunk from \"redux-thunk\";\n\nimport createSagaMiddleware from \"redux-saga\";\nimport fetchCollectionsStart from \"./shop/shop.sagas\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart);\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/home/hamdi/Desktop/e-commerce/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","rootReducer","createSagaMiddleware","fetchCollectionsStart","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CACA;;AACC,OAAOC,oBAAP,MAAiC,YAAjC;AACD,OAAQC,qBAAR,MAAoC,mBAApC;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AAED,MAAMW,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEAD,cAAc,CAACO,GAAf,CAAmBR,qBAAnB;AAEA,MAAMS,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B;AAEA,SAAQA,KAAR,EAAeE,SAAf","sourcesContent":["import {createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './root-reducer';\n//import thunk from \"redux-thunk\";\n import createSagaMiddleware from \"redux-saga\";\nimport  fetchCollectionsStart  from \"./shop/shop.sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n    middlewares.push(logger)\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(fetchCollectionsStart);\n\nconst persistor = persistStore(store);\n\nexport {store, persistor};"]},"metadata":{},"sourceType":"module"}