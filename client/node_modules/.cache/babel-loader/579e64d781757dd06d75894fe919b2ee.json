{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport { ShopActionTypes } from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsStart, fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapShot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapShot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}","map":{"version":3,"sources":["/home/hamdi/Desktop/e-commerce/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapShot","get","collectionsMap","error","message"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SAAQC,eAAR,QAA8B,cAA9B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SACIC,qBADJ,EAEIC,uBAFJ,EAGIC,uBAHJ,QAIQ,gBAJR;AAMA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,MAAI;AACA,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAAEI,+BAAF,EAAmCO,QAAnC,CAAjC;AACA,UAAMV,GAAG,CAACK,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMb,GAAG,CAACM,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\n\nimport {ShopActionTypes} from \"./shop.types\";\n\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\n\nimport { \n    fetchCollectionsStart,\n    fetchCollectionsSuccess,\n    fetchCollectionsFailure\n } from \"./shop.actions\";\n\nexport function* fetchCollectionsAsync() {\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapShot = yield collectionRef.get();\n        const collectionsMap = yield call (convertCollectionsSnapshotToMap, snapShot)\n        yield put(fetchCollectionsSuccess(collectionsMap));\n    } catch (error) {\n        yield put(fetchCollectionsFailure(error.message));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}