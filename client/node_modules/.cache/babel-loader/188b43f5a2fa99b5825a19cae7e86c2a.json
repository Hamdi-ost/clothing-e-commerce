{"ast":null,"code":"var _jsxFileName = \"/home/hamdi/Desktop/e-commerce/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport './sign-up.style.scss';\nimport InputForm from '../input-form/input-form.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredantials, setUserCredantials] = useState({\n    'displayName': '',\n    'email': '',\n    'password': '',\n    'confirmPassword': ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredantials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n\n    if (password !== confirmPassword) {\n      alert('Passwords don\\'t match');\n      return;\n    } // try {\n    //     const { user } = await auth.createUserWithEmailAndPassword(email, password);\n    //     await createUserProfileDocument(user, {displayName})\n    //     setState({\n    //         'displayName': '',\n    //         'email': '',\n    //         'password': '',\n    //         'confirmPassword': ''\n    //     })\n    // } catch (error) {\n    //     console.log(error);\n    // }\n\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState({\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Sign up with your email\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputForm, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InputForm, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InputForm, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InputForm, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \" Sign Up \")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/hamdi/Desktop/e-commerce/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","auth","createUserProfileDocument","InputForm","CustomButton","signUpStart","connect","SignUp","userCredantials","setUserCredantials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","setState","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport './sign-up.style.scss';\nimport InputForm from '../input-form/input-form.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\n\nconst SignUp = ({signUpStart }) => {\n\n    const [userCredantials, setUserCredantials] = useState({\n        'displayName': '',\n        'email': '',\n        'password': '',\n        'confirmPassword': ''\n    })\n\n    const { displayName, email, password, confirmPassword } = userCredantials;\n\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        signUpStart({displayName, email, password})\n\n        if (password !== confirmPassword) {\n            alert('Passwords don\\'t match');\n            return;\n        }\n\n        // try {\n        //     const { user } = await auth.createUserWithEmailAndPassword(email, password);\n        //     await createUserProfileDocument(user, {displayName})\n        //     setState({\n        //         'displayName': '',\n        //         'email': '',\n        //         'password': '',\n        //         'confirmPassword': ''\n        //     })\n        // } catch (error) {\n        //     console.log(error);\n        // }\n    }\n\n    const  handleChange = event => {\n        const { name, value } = event.target;\n\n        setState({ [name]: value });\n    }\n\n\n\n        return (\n            <div className=\"sign-up\">\n                <h2 className=\"title\">I do not have an account</h2>\n                <span>Sign up with your email</span>\n                <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n                    <InputForm\n                    type=\"text\"\n                    name='displayName'\n                    value={displayName}\n                    onChange={handleChange}\n                    label='Display Name'\n                    required\n                    />\n                    <InputForm\n                    type=\"email\"\n                    name='email'\n                    value={email}\n                    onChange={handleChange}\n                    label='Email'\n                    required\n                    />\n                    <InputForm\n                    type=\"password\"\n                    name='password'\n                    value={password}\n                    onChange={handleChange}\n                    label='Password'\n                    required\n                    />\n                    <InputForm\n                    type=\"password\"\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label='Confirm Password'\n                    required\n                    />\n                    <CustomButton type=\"submit\"> Sign Up </CustomButton>\n                </form>\n            </div>\n        )\n    \n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}