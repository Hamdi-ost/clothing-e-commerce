{"ast":null,"code":"var _jsxFileName = \"/home/hamdi/Desktop/e-commerce/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverviewComponent from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport Collection from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverviewComponent);\nconst CollectionPageWithSpinner = WithSpinner(Collection);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    const {\n      updateCollections\n    } = this.props;\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoding: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 69\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoding: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 81\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/hamdi/Desktop/e-commerce/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverviewComponent","Route","Collection","connect","updateCollections","WithSpinner","firestore","convertCollectionsSnapshotToMap","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","props","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAQC,WAAR,MAA0B,sDAA1B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACL,4BAAD,CAAlD;AACA,MAAMS,yBAAyB,GAAGJ,WAAW,CAAEH,UAAF,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAF6B;AAAA,SAMrCC,uBANqC,GAMX,IANW;AAAA;;AAQrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAM;AAAEb,MAAAA;AAAF,QAAwB,KAAKc,KAAnC;AAEAF,IAAAA,aAAa,CAACG,UAAd,CAA0B,MAAMC,QAAN,IAAkB;AAC1C,YAAMC,cAAc,GAAGd,+BAA+B,CAACa,QAAD,CAAtD;AACAhB,MAAAA,iBAAiB,CAACiB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,KAJD;AAMD;;AAEDU,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKN,KAAvB;AACA,UAAM;AAAEL,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAc,MAAA,IAAI,EAAK,GAAEY,KAAK,CAACC,IAAK,EAApC;AAAuC,MAAA,MAAM,EAAGP,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,QAAQ,EAAEL;AAA1C,SAAuDK,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAI,GAAEM,KAAK,CAACC,IAAK,gBAAlC;AAAmD,MAAA,MAAM,EAAGP,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,QAAQ,EAAEL;AAArC,SAAkDK,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF;AAMD;;AA7BoC;;AAgCvC,MAAMQ,kBAAkB,GAAGC,QAAQ,KAAM;AACvCvB,EAAAA,iBAAiB,EAAEiB,cAAc,IAAIM,QAAQ,CAACvB,iBAAiB,CAACiB,cAAD,CAAlB;AADN,CAAN,CAAnC;;AAIA,eAAelB,OAAO,CAAE,IAAF,EAAQuB,kBAAR,CAAP,CAAmChB,QAAnC,CAAf","sourcesContent":["import React from 'react';\nimport CollectionsOverviewComponent from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport Collection from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport  WithSpinner  from \"../../components/with-spinner/with-spinner.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverviewComponent)\nconst CollectionPageWithSpinner = WithSpinner (Collection);\n\nclass ShopPage extends React.Component {\n\n  state = {\n    loading: true\n  }\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    const { updateCollections } = this.props;\n\n    collectionRef.onSnapshot( async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({loading: false});\n    })\n\n  }\n\n  render () {\n    const { match } = this.props;\n    const { loading } = this.state;\n    return (\n      <div className=\"shop-page\">\n          <Route exact  path = {`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoding={loading} {...props} />} />\n          <Route exact path= {`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoding={loading} {...props} />}/>\n      </div> \n    );\n  }\n}  \n\nconst mapDispatchToProps = dispatch =>  ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect (null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}