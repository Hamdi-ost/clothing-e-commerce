{"ast":null,"code":"export const addItemToCart = (cartItems, itemToAdd) => {\n  const existItem = cartItems.find(cartItem => cartItem.id === itemToAdd.id);\n\n  if (existItem) {\n    return cartItems.map(cartItem => cartItem.id === itemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...itemToAdd,\n    quantity: 1\n  }];\n};\nexport const decreaseItem = (cartItems, itemToRemove) => {\n  const existItem = cartItems.find(cartItem => cartItem.id === itemToRemove.id);\n\n  if (existItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== itemToRemove.id);\n  }\n};","map":{"version":3,"sources":["/home/hamdi/Desktop/e-commerce/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","itemToAdd","existItem","find","cartItem","id","map","quantity","decreaseItem","itemToRemove","filter"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACnD,QAAMC,SAAS,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EAArD,CAAlB;;AAEA,MAAGH,SAAH,EAAc;AACV,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EAA1B,GACE,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADF,GAEEH,QAHC,CAAP;AAKH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,SAAL;AAAgBM,IAAAA,QAAQ,EAAE;AAA1B,GAAf,CAAP;AACH,CAZM;AAeP,OAAO,MAAMC,YAAY,GAAG,CAACR,SAAD,EAAYS,YAAZ,KAA6B;AACrD,QAAMP,SAAS,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,YAAY,CAACJ,EAAxD,CAAlB;;AAEA,MAAGH,SAAS,CAACK,QAAV,KAAuB,CAA1B,EAA6B;AACzB,WAAOP,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,YAAY,CAACJ,EAA1D,CAAP;AACH;AACJ,CANM","sourcesContent":["export const addItemToCart = (cartItems, itemToAdd) => {\n    const existItem = cartItems.find(cartItem => cartItem.id === itemToAdd.id);\n\n    if(existItem) {\n        return cartItems.map(cartItem => \n            cartItem.id === itemToAdd.id \n            ? { ...cartItem, quantity: cartItem.quantity + 1}\n            : cartItem\n        )\n    }\n\n    return [...cartItems, { ...itemToAdd, quantity: 1}];\n}\n\n\nexport const decreaseItem = (cartItems, itemToRemove) => {\n    const existItem = cartItems.find(cartItem => cartItem.id === itemToRemove.id);\n\n    if(existItem.quantity === 1) {\n        return cartItems.filter(cartItem => cartItem.id !== itemToRemove.id)\n    }\n}"]},"metadata":{},"sourceType":"module"}